# [1] 생성자 : 객체를 생성 할 때 사용되는 매소드
    # 생성 : 사물이 생겨 나거나 누군가에 의해서 사물을 생기게 하는 것
    # (컴퓨터)생성(행위)자 : 객체를 생기게 하는 매소드
    # 파이썬에서 생성자를 표현하는 문법
        # def __init__(self , 매개변수1, 매개변수2) :
        #       self.속성명 = 매개변수1
        #       self.속성명 = 매개변수2

    # 관례적으로 속성명과 매개변수명은 동일하게 한다.


# 1. 클래스 정의/만들기
class User :
    # 생성자 : 객체를 생성할 때 실행되는 매소드 정의
    def __init__(self, paramename ,paramegae):
        self.name = paramename
        self.age = paramegae
        # self (본인) 객체  - 해당 매소드를 실행하는 객체를 뜻한다

# 2. 클래스 기반으로 객체 만들기
User('유재석',40) # 클래스명() <----소괄호가 생성자 호출 문법
User('강호동',21) # 클래스명(인자값 , 인자값) <--- 지칭한 인자값들은 생성자의 매개변수로 대입된다.

# 3. 객체와 변수의 관계 # 일반적으로 객체는 생성 후 변수에 (주소값) 대입 # 객체는 특정한 변수가 참조 하지 않으면 자동 으로 사라진다
10 + 10 # 10 + 10 결과의 20을 변수에 저장을 생략 하면 20은 사라진다
User('신동엽' , 30) # 객체를 생성 하고 사라진다
u1 = User('서장훈' , 40) # 객체를 생성하고 객체위치(주소)를 변수에 저장한다
print(u1) # <__main__.User object at 0x00000213B5E1D820> # 객체가 저장된 메모리 (위치)주소값(16진수)

# 4. 객체 주소를 가지고 있는 변수를 통해 객체를 참조(어떠한 것을 견주어 살피는 것) 할 수 있다.
    # 변수는 객체의 위치를 알고 있지만 변수가 객체가 아니다.
var1 = 10 # var1 변수의 메모리 공간 안에는 10(리터럴)를 참조할 수 있는 (주소값) 위치를 저장 한다
u2 = User('하하' , 35) # u2 변수의 메모리 공간 안에는 해당 객체를 참조 할 수 있는 위치를 저장 한다

# 5. .(도트/접근 연산자) # .참조 위치로 이동 하라는 뜻
# u1. # u1 변수가 가지고 있는 객체 위치로 이동 하라는 뜻
u1.name # u1 변수가 가지고 있는 객체 위치로 이동 했더니 거기에 속성과 함수들이 존재 한다
print(u1.name) # 서장훈
print(u2.name) # 하하
print(u1.age) # 40

# [2] 친구 집에 냉장고 내용물 확인 # 친구 집의 집주소를 알아야 한다.
    # 1. 아파트 설계도/도면
class Apart :
    # 생성자
    def __init__(self,fridge):
        self.fridge = fridge

    # 2. 아파트 객체 생성
유재석집 = Apart('바나나') # 객체 생성과 동시에 냉장고에 바나나 대입 했다 (초기화)
강호동집 = Apart('아이스크림') # 객체 생성과 동시에 냉장고에 아이스크림 대입 했다
print(유재석집) # <__main__.Apart object at 0x000002C56F00E390> # 301호
print(강호동집) # <__main__.Apart object at 0x000002280155E480> # 303호

    # 3. 객체 내 속성 값 확인 # . (도트)연산자를 객체 접근
print(유재석집.fridge) # 유재석 집에 접근 해서 냉장고를 호출 했더니 '바나나' 출력된다
# 객체 내 속성 값을 호출 했다
print(강호동집.fridge) # 아이스크림

# 실습1 : 자동차 들을 관리하는 메모리 설계
    # 조건 : 자동차의 고유특성/성질 : 차량번호 , 제조사 , 현재속도 등등
    # 문제 : 조건에 따른 고유특성을 가지는 클래스를 정의하여 임의 자동차(객체) 2개를 생성하고 각 객체들의 속성을 출력하는 코드 작성 하시오
class Car :
    def __init__(self,차량번호,제조사,현재속도):
        self.차량번호 = 차량번호
        self.제조사 = 제조사
        self.현재속도 = 현재속도

자동차1 = Car('1234','기아','80km')
자동차2 = Car('5678','현대','90km')

print(f'{자동차1.차량번호}, {자동차1.제조사}, {자동차1.현재속도}')
print(f'{자동차2.차량번호}, {자동차2.제조사}, {자동차2.현재속도}')