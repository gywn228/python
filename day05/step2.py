# 반복문
#   - 특정 조건에 따라 실행문을 반복 한다.
#       - 특정 조건이 True 이면 반복 실행 , False 이면 반복 종료
#       - 종료 되는 시점 판단.
# 반복문과 주로 같이 사용되는 함수
    # range(숫자) : 0부터 숫자 미만 까지 포함 하는 range 객체를 반환
    # range(시작 수, 끝 수) : 시작 숫자 부터 끝 숫자 미만을 포함 하는 range 객체를 반환
    # range(시작 수, 끝 수 , 증강 수) : 시작 수 부터 끝 수 미만 까지 증강 수 만큼 증강 하면서 포함 하는 range 객체를 반환
# (1) range() : 숫자 목록[리스트]를 생성 해서 반환 해주는 함수
print( list( range(10) ) ) # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
print( list( range(10 , 20) ) ) # [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
print( list( range(10, 20 ,2) ) ) # [10, 12, 14, 16, 18]

# (2) for문
    # 1~5 까지 출력 ,
    # 반복 되는 코드 : print() ,
    # 반복 되지 않는 코드 : 1 2 3 4 5 , 1부터 5까지 1씩 증가 => range(1,6)
print(1)
print(2)
print(3)
print(4)
print(5)
    # for 변경
#1부터 5까지 (6미만) 1씩 증가하면서 반복변수에 하나씩 대입 반복한다
for 반복변수 in range(1,6) : # for 반복변수 in [1 ,2, 3, 4, 5] :
    print(반복변수)

'''
    1회전 : 반복변수 = 1    print(1)
    2회전 : 반복변수 = 2    print(2)
    3회전 : 반복변수 = 3    print(3)
    4회전 : 반복변수 = 4    print(4)
    5회전 : 반복변수 = 5    print(5)
'''

#(2) 1~100 출력 , 시작값(1) 부터 끝값 (100) 까지 1씩 증가(증강) 반복 , 100회 반복
for 반복수 in range ( 1, 101 ,1 ) :
    print(반복수, end="\t") # print(출력문 , end="제어문자")  #이스케이프 문자 : \n 줄바꿈 \t 들여 쓰기
print()
#(3) 1~200 까지 10 증가 하면서 출력, 시작값(1) 부터 끝값(200) 까지 10 씩 증가(증강) 반복
for var in range(1, 200 ,10) :
    print(var , end = "\t")
#(4) 1~10 까지의 총 누적 합계 출력
sum = 0 #누적 합계를 저장 할 변수
for var in range (1 , 11 , 1) :  # 1씩 증가는 1 생략 가능
    sum += var #복합 대입 연산자 # += : 기존 변수에 값을 더한 후에 기존 변수에 대입 구조 # 누적값
    #sum = sum + var # sum 변수에 var 더한 값을 sum 변수에 대입 한다
print(f'sum : {sum}') #55
#(5) 1~100 까지의 짝수만 총 누적 합계 출력 , 1~100까지 2씩 증가 반복 ->
sum = 0 # 누적 합계를 저장할 변수
for var in range(1, 101 ,1) : #방법1) range(2,101,2) 짝수
    #방법2)
    if var % 2 == 0 :
        print(var)