# [1] 출력 함수, print( 리터럴 값 또는 변수명 )
    # print() 소괄호 안에 있는 값을 출력 하는 함수
print( 10 ) #10 출력
실수상자 = 3.14
print(실수상자) #변수 안에 있는 데이터 호출 한 후 출력 한다.
# [2] 문자열 연결
    # 1. ,(쉼표)를 이용한 여러개 문자열을 출력 하기 , 사이에 공백이 추가됨
print("파이썬", "문법", "학습중")
    # 2. +(더하기)를 이용한 여러개 문자열을 출력 하기
print("파이썬" + "문법" + "학습중")
# [3] 문자열과 연산코드를 연결 하여 문자열 만들기 , f
print(f"파이썬""문법""학습중")
print(f"파이썬 문법 학습중 {실수상자}") #f "문자열 {} 문자열 "
# {} 중괄호를 이용한 문자열 사이에 변수값이나 리터럴값을 연결할 수 있다.
name = "유재석" # 'name' 변수에 "유재석"이라는 문자열 리터럴 값을 대입
age = 42 # 'age' 변수에 42라는 정수 리터럴값 대입 
print(f"나의 이름은 {name}이고, 나이는 {age + 10}살 입니다")
print(f"나이 : {age<5}") # {값<자리수} : 값을 자리수 만큼 차지, 왼쪽 정렬
# {age>5} 안에서 띄어쓰기 금지
print(f"나이 : {age>5}")# 오른쪽 정렬
print(f"나이: {age^5}")#{값^자리수}:값을 자리수 만큼 차지 가운데 정렬
#(3-3)소수점 자리수 맞추기
print(f"키 {165.15:0.1f}") #{값 :[총자리수]/[소수자리수]f}, 잘린 소수점은 반올림이 된다
pi = 3.141592
print(f"pi: {pi:>10.3f}") #{pi:>10.3f},총 10칸이고 오른쪽정렬 하면서 소수점은 3칸, 잘린 부분에서 반올림 한다.

#[4] 이스케이프/제어 문자, 제어기능이 담긴 문자들 컴퓨터 규칙, 다른언어들과 공통
    #1. \n : 문자열의 줄을 바꿔 주는 기능이 포함된 문자
    #2. \t : 문자열의 들여쓰기[tap]을 해주는 기능이 담긴 문자
    #3. \\ : 문자열의 '\' 백슬러시를 출력해주는 기능
        # 주의할점 : \ 한개 이면 이스케이프 기능 이므로 백슬러시 출력시에는 \\ 백슬러시 두번하면 한번이 출력
    #4. \" : 문자열의 " 큰따옴표를 출력해주는 기능 담긴 문자
    #5. \' : 문자열의 ' 작은따옴표를 출력해주는 기능이 담긴 문자
        # " 또는 ' 는 한개가 있으면 문자열 타입 기능이므로 " 또는 ' 출력시에는 \' 백슬러시 함께 작성함
print("안녕 파이썬") #안녕 파이썬
print("안녕\n파이썬") 
#안녕
#파이썬
print("a\tb") #a  b ,한칸 vs tap 서로 다르다
print("안녕\"파이썬\"") #오류발생 : 문자열 구분 " 출력 하는 " 구분이 불가능 하다 #안녕"파이썬"
print('안녕"파이썬"') #안녕"파이썬"
print("안녕'파이썬'") #안녕'파이썬'
print("안녕\'파이썬\'") #안녕'파이썬'